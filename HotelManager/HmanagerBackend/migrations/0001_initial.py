# Generated by Django 4.1.1 on 2022-09-23 16:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blog_id', models.AutoField(primary_key=True, serialize=False)),
                ('blog_title', models.CharField(max_length=200)),
                ('blog_post', models.ImageField(upload_to='')),
                ('blog_subtitle', models.CharField(max_length=200)),
                ('blog_content', models.TextField()),
                ('date_posted', models.DateField()),
                ('blog_likes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('room_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('room_type_name', models.CharField(max_length=25)),
                ('room_type_desc', models.CharField(max_length=250)),
                ('room_type_pic', models.ImageField(upload_to='')),
                ('room_type_size', models.CharField(max_length=20)),
                ('room_type_maxoc', models.IntegerField()),
                ('room_type_cost', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statusid', models.IntegerField()),
                ('status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion_id', models.IntegerField()),
                ('client_email', models.EmailField(max_length=254)),
                ('suggestion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_number', models.IntegerField(primary_key=True, serialize=False)),
                ('room_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HmanagerBackend.roomtype')),
                ('statusid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HmanagerBackend.status')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(max_length=254)),
                ('client_phone', models.IntegerField()),
                ('client_checkin', models.DateField()),
                ('client_checkout', models.DateField()),
                ('room_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roomtype', to='HmanagerBackend.roomtype')),
                ('statusid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HmanagerBackend.status')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_phone', models.IntegerField()),
                ('client_email', models.EmailField(max_length=254)),
                ('checkin', models.DateField()),
                ('checkout', models.DateField()),
                ('no_of_guests', models.IntegerField()),
                ('no_of_children', models.IntegerField()),
                ('room_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HmanagerBackend.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('comment_owner', models.CharField(max_length=60)),
                ('blog_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HmanagerBackend.blog')),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
